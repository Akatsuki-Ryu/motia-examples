/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  type Handlers = {
    'WebSearchAgent': EventHandler<{ query: string }, { topic: 'web.search.completed'; data: { query: string; resultCount: number; symbols?: string[]; resultSummary?: string; error?: string; message?: string } }>
    'SaveResultHandler': EventHandler<{ query?: string; timestamp: string; response?: unknown; error?: string }, never>
    'FinanceResultAPI': ApiRouteHandler<Record<string, unknown>, unknown, { topic: 'analysis.completed'; data: { query?: string; timestamp: string; response?: unknown; error?: string } }>
    'ResponseCoordinator': EventHandler<{ query: string; resultCount: number; symbols?: string[]; resultSummary?: string; error?: string; message?: string }, { topic: 'response.completed'; data: { query?: string; timestamp: string; response?: unknown } }>
    'FinanceQueryAPI': ApiRouteHandler<{ query: string }, unknown, { topic: 'query.received'; data: { query: string } }>
    'OpenAIAnalysisHandler': EventHandler<{ query?: string; timestamp: string; response?: unknown }, { topic: 'analysis.completed'; data: { query?: string; timestamp: string; response?: unknown; error?: string } }>
    'FinanceDataAgent': EventHandler<{ query: string }, { topic: 'finance.data.completed'; data: { query: string; resultCount: number; symbols?: string[]; resultSummary?: string; error?: string; message?: string } }>
  }
}