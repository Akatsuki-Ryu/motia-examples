/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  type Handlers = {
    'PR Webhook Handler': ApiRouteHandler<{ action: string; pull_request: { number: number; title: string; body?: string; state: string; labels: { name: string }[]; user: { login: string }; base: { ref: string; repo?: { name: string; owner: { login: string } } }; head: { ref: string; sha: string }; merged?: boolean }; repository?: { owner: { login: string }; name: string } }, ApiResponse<200, { message: string }>, { topic: 'github.pr.opened'; data: { prNumber: number; title: string; body?: string; owner: string; repo: string; author: string; baseBranch: string; headBranch: string; commitSha: string } } | { topic: 'github.pr.edited'; data: { prNumber: number; title: string; body?: string; owner: string; repo: string; author: string; baseBranch: string; headBranch: string; commitSha: string } }>
    'PR Test Monitor': EventHandler<{ prNumber: number; title: string; body?: string; owner: string; repo: string; author: string; baseBranch: string; headBranch: string; commitSha: string }, never>
    'PR Reviewer Assigner': EventHandler<{ prNumber: number; title: string; body?: string; owner: string; repo: string; author: string; classification: { type: 'bug-fix' | 'feature' | 'documentation' | 'refactor'; impact: 'low' | 'medium' | 'high'; areas: string[] } }, never>
    'PR Label Assigner': EventHandler<{ prNumber: number; title: string; body?: string; owner: string; repo: string; author: string; classification: { type: 'bug-fix' | 'feature' | 'documentation' | 'refactor'; impact: 'low' | 'medium' | 'high'; areas: string[] } }, never>
    'PR Classifier': EventHandler<{ prNumber: number; title: string; body?: string; owner: string; repo: string; author: string; baseBranch: string; headBranch: string; commitSha: string }, { topic: 'github.pr.classified'; data: { prNumber: number; title: string; body?: string; owner: string; repo: string; author: string; classification: { type: string; impact: string; areas: string[] } } }>
    'Label Assigner': EventHandler<{ issueNumber: number; owner: string; repo: string; classification: { type: 'bug' | 'feature' | 'question' | 'documentation'; priority: 'low' | 'medium' | 'high' | 'critical'; complexity: 'simple' | 'moderate' | 'complex' } }, { topic: 'github.issue.labeled'; data: { issueNumber: number; title: string; body?: string; owner: string; repo: string; classification: { type: 'bug' | 'feature' | 'question' | 'documentation'; priority: 'low' | 'medium' | 'high' | 'critical'; complexity: 'simple' | 'moderate' | 'complex' }; labels: string[] } }>
    'Issue Classifier': EventHandler<{ issueNumber: number; title: string; body?: string; owner: string; repo: string }, { topic: 'github.issue.classified'; data: { issueNumber: number; owner: string; repo: string; classification: { type: 'bug' | 'feature' | 'question' | 'documentation'; priority: 'low' | 'medium' | 'high' | 'critical'; complexity: 'simple' | 'moderate' | 'complex' } } }>
    'New Issue Handler': EventHandler<{ issueNumber: number; title: string; body?: string; owner: string; repo: string }, { topic: 'github.issue.processed'; data: { issueNumber: number; title: string; body?: string; owner: string; repo: string } }>
    'Issue Update Handler': EventHandler<{ issueNumber: number; title: string; body?: string; owner: string; repo: string }, never>
    'Issue Closure Handler': EventHandler<{ issueNumber: number; owner: string; repo: string }, never>
    'GitHub Webhook Handler': ApiRouteHandler<{ action: string; issue: { number: number; title: string; body?: string; state: string; labels: { name: string }[] }; repository: { owner: { login: string }; name: string } }, ApiResponse<200, { message: string }>, { topic: 'github.issue.opened'; data: { issueNumber: number; title: string; body?: string; owner: string; repo: string } } | { topic: 'github.issue.edited'; data: { issueNumber: number; title: string; body?: string; owner: string; repo: string } } | { topic: 'github.issue.closed'; data: { issueNumber: number; owner: string; repo: string } }>
    'Assignee Selector': EventHandler<{ issueNumber: number; title: string; body?: string; owner: string; repo: string; classification: { type: 'bug' | 'feature' | 'question' | 'documentation'; priority: 'low' | 'medium' | 'high' | 'critical'; complexity: 'simple' | 'moderate' | 'complex' }; labels: string[] }, never>
  }
}